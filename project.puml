@startuml
interface ru.emiren.infosystemdepartment.Service.SQL.ProtectionService {
~ List<ProtectionDTO> getAllProtections()
~ LocalDate getDateWithSpecificStudent(StudentLecturersDTO,List<ProtectionDTO>)
~ Protection saveProtection(Protection)
}

class ru.emiren.infosystemdepartment.Controller.Support.SupportController {
- DataService dataService
- DataRepository dataRepository
+ String main(Model)
+ String saveData(DataDTO,Model)
+ String viewTicket(int,Model)
}


interface ru.emiren.infosystemdepartment.Repository.SQL.CommisionerRepository {
}
class ru.emiren.infosystemdepartment.Service.SQL.Impl.LecturerServiceImpl {
- LecturerRepository lecturerRepository
+ LecturerDTO findByLecturerId(Long)
+ LecturerDTO findByLecturerName(String)
+ List<LecturerDTO> getAllLecturer()
+ LecturerDTO createDummyLecturer()
+ List<LecturerDTO> findAllLecturersById(Long)
+ Lecturer saveLecturer(Lecturer)
}


class ru.emiren.infosystemdepartment.Service.Support.Impl.DataServiceImpl {
- DataRepository dataRepository
+ Data saveData(DataDTO)
+ DataDTO getDataById(int)
}


class ru.emiren.infosystemdepartment.Mapper.LecturerMapper {
+ {static} Lecturer mapToLecturer(LecturerDTO)
+ {static} LecturerDTO mapToLecturerDTO(Lecturer)
}

class ru.emiren.infosystemdepartment.Controller.API.ApplicationProgrammingInterfaceController {
- LecturerRepository lecturerRepository
- StudentService studentService
- DepartmentService departmentService
- LecturerService lecturerService
- OrientationService orientationService
- ProtectionService protectionService
- StudentLecturersService studentLecturersService
- FQWService fqwService
- YearStudentService yearStudentService
- WordService wordService
- Map<String,Map<String,List<FileHeader>>> map
- DateFormat dateFormat
- Date date
~ List<List<String>> data
- Map<String,Map<String,List<String>>> mapOfDataFromPDF
+ String downloadProtocols(HttpServletResponse)
+ String deserialization(MultipartHttpServletRequest,RedirectAttributes)
- List<List<String>> getListOfDataFromFile(InputStream)
+ ResponseEntity<String> uploadDataAndProceedToModels(MultipartHttpServletRequest,RedirectAttributes)
+ ResponseEntity<String> uploadZipFile(MultipartHttpServletRequest,HttpServletResponse)
- void handleDecreePdfFile(ZipFile,List<FileHeader>)
- void handleFqwWordFile(ZipFile,List<FileHeader>)
- void parseDataFromWordToSqlDatabase(List<List<String>>)
}


enum ru.emiren.infosystemdepartment.Controller.API.FileTypes {
+  Excel
+  Word
+  PDF
+  DOCX
- String fileType
}

enum ru.emiren.infosystemdepartment.Controller.API.FileData {
+  FQW
+  GOV
+  REV
+  COM
+  PRO
- String fileData
}

class ru.emiren.infosystemdepartment.DTO.SQL.DataContainerDTO {
}
interface ru.emiren.infosystemdepartment.Repository.SQL.DepartmentRepository {
}
class ru.emiren.infosystemdepartment.Mapper.SQL.CommisionerMapper {
+ {static} Commissioner mapToCommisioner(CommisionerDTO)
+ {static} CommisionerDTO mapToCommisionerDTO(Commissioner)
}

class ru.emiren.infosystemdepartment.DTO.SQL.DepartmentDTO {
- Long code
- String name
}

class ru.emiren.infosystemdepartment.Controller.API.InterAppLayerController {
- String goIpLayer
+ void UpdateDatabase()
}


class ru.emiren.infosystemdepartment.Service.SQL.Impl.ProtectionServiceImpl {
- ProtectionRepository protectionRepository
+ List<ProtectionDTO> getAllProtections()
+ LocalDate getDateWithSpecificStudent(StudentLecturersDTO,List<ProtectionDTO>)
+ Protection saveProtection(Protection)
}


class ru.emiren.infosystemdepartment.Model.SQL.YearStudent {
- Long id
- Student student
- Year year
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.StudentServiceImpl {
- StudentRepository studentRepository
- LecturerRepository lecturerRepository
+ Student saveStudent(Student)
+ List<StudentDTO> findAllStudent()
+ List<Student> findAllStudentById(Long)
+ List<StudentDTO> findAllStudentByLecturerIdAndOrientationCodeAndDepartmentCode(Long,String,String)
+ List<StudentDTO> findAllStudentByLecturerId(Long)
}


class ru.emiren.infosystemdepartment.DTO.SQL.FQWDTO {
- String name
- String classifier
- Float uniqueness
- String feedback
- String volume
- Reviewer reviewer
}

class ru.emiren.infosystemdepartment.Controller.Excel.ExcelController {
- Integer THREADS
- ThreadPoolExecutor threadExecutor
- Map<String,String> map
- XSSFWorkbook workbook
- DataFormatter dataFormatter
- Map<String,String> listsOfDepartments
- Map<String,List<String>> listsOfUrNorms
- Map<String,List<String>> listsOfOop
- Map<String,String> listsOfInitials
- List<List<String>> listsOfConsolitatedUN
+ String uploadExcel(MultipartHttpServletRequest)
- void cleanDataFromLists(List<List<String>>,Map<String,List<String>>,Map<String,String>,Map<String,List<String>>,Map<String,String>)
- List<List<String>> addConsolitatedUnToMatrixFromSheet(XSSFSheet)
- void addDataToDbFromSheets(List<List<String>>,Map<String,List<String>>,Map<String,String>,Map<String,List<String>>,Map<String,String>)
- Map<String,List<String>> addOopToMapFromSheet(XSSFSheet)
- Map<String,List<String>> addUrNormsToMapFromSheet(XSSFSheet)
- Map<String,String> addDepartmentsToMapFromSheet(XSSFSheet)
- Map<String,String> addInitialsToMapFromSheet(XSSFSheet)
}


class ru.emiren.infosystemdepartment.DTO.SQL.LecturerDTO {
- Long id
- String name
- String academicDegree
- String position
- DepartmentDTO department
- List<StudentLecturersDTO> students
}

interface ru.emiren.infosystemdepartment.Repository.SQL.ReviewerRepository {
}
class ru.emiren.infosystemdepartment.DTO.SQL.OrientationDTO {
- String code
- String name
- List<ProtectionDTO> protection
+ String toString()
}


class ru.emiren.infosystemdepartment.DTO.SQL.CommisionerDTO {
- String name
- String university
- String department
- List<ProtectionCommissioner> protectionCommissioners
}

class ru.emiren.infosystemdepartment.DTO.SQL.YearStudentDTO {
- Long id
- Student student
- Year year
}

interface ru.emiren.infosystemdepartment.Repository.SQL.YearStudentRepository {
}
class ru.emiren.infosystemdepartment.DTO.SQL.ReviewerDTO {
- Long id
- String name
- String academicDegree
- String position
}

class ru.emiren.infosystemdepartment.DTO.SQL.StudentDTO {
- Long id
- Long stud_num
- String name
- String citizenship
- String loe
- String classifier
- FQWDTO fqw
- OrientationDTO orientation
- DepartmentDTO department
- List<StudentLecturersDTO> lecturers
- List<YearStudentDTO> yearStudents
}

class ru.emiren.infosystemdepartment.InfoSystemDepartmentApplication {
+ {static} void main(String[])
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.ProtectionCommissionerServiceImpl {
- ProtectionCommissionerRepository protectionCommissionerRepository
+ ProtectionCommissioner saveProtectionCommissioner(ProtectionCommissioner)
}


interface ru.emiren.infosystemdepartment.Service.SQL.YearStudentService {
~ List<YearStudentDTO> getAllYearStudent()
~ YearStudent saveYearStudent(YearStudent)
}

interface ru.emiren.infosystemdepartment.Repository.Support.DataRepository {
}
interface ru.emiren.infosystemdepartment.Service.Support.DataService {
~ Data saveData(DataDTO)
~ DataDTO getDataById(int)
}

class ru.emiren.infosystemdepartment.Model.SQL.Commissioner {
- Long id
- String name
- String university
- String department
- List<ProtectionCommissioner> protectionCommissioners
}

interface ru.emiren.infosystemdepartment.Service.SQL.ProtocolService {
~ Protocol saveProtocol(Protocol)
}

class ru.emiren.infosystemdepartment.Model.SQL.ProtectionCommissioner {
- Long id
- Protection protection
- Commissioner commissioner
- String question
}

class ru.emiren.infosystemdepartment.Mapper.SQL.YearStudentMapper {
+ {static} YearStudent mapToYearStudent(YearStudentDTO)
+ {static} YearStudentDTO mapToYearStudentDTO(YearStudent)
}

interface ru.emiren.infosystemdepartment.Service.SQL.ReviewerService {
~ Reviewer saveReviewer(Reviewer)
}

class ru.emiren.infosystemdepartment.Model.Support.Data {
- Long id
- String fullName
- String email
- String phone
- String description
}

class ru.emiren.infosystemdepartment.DTO.Support.DataDTO {
+ Long id
+ String fullName
+ String email
+ String phone
+ String description
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.DepartmentServiceImpl {
- DepartmentRepository departmentRepository
+ List<DepartmentDTO> getAllDepartments()
+ Department saveDepartment(Department)
}


class ru.emiren.infosystemdepartment.Util.DateUtil {
+ {static} Date stringToDate(String)
+ {static} String getYear(Date)
+ {static} String getMonth(Date)
+ {static} String getDay(Date)
+ {static} String dateToString(Date)
}

class ru.emiren.infosystemdepartment.Model.SQL.Protocol {
- String fioStudent
- String fqwName
- String headOfTheFQW
- String review
- Integer volume
- Integer grade
}

class ru.emiren.infosystemdepartment.DTO.SQL.ProtectionDTO {
- Long id
- Orientation orientation
- LocalDate dateOfProtection
- List<ProtectionCommissionerDTO> commissioners
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.CommissionerServiceImpl {
- CommisionerRepository commisionerRepository
+ Commissioner saveCommissioner(Commissioner)
}


interface ru.emiren.infosystemdepartment.Service.SQL.FQWService {
~ List<FQWDTO> getAllFQW()
~ FQW saveFqw(FQW)
}

class ru.emiren.infosystemdepartment.InfoSystemDepartmentApplicationTests {
}
class ru.emiren.infosystemdepartment.Mapper.ProtocolMapper {
+ {static} Protocol mapToProtocol(ProtocolDTO)
+ {static} ProtocolDTO mapToProtocolDTO(Protocol)
}

class ru.emiren.infosystemdepartment.Mapper.DepartmentMapper {
+ {static} Department mapToDepartment(DepartmentDTO)
+ {static} DepartmentDTO mapToDepartmentDTO(Department)
}

class ru.emiren.infosystemdepartment.Model.SQL.Protocol.Data {
}
interface ru.emiren.infosystemdepartment.Service.SQL.ProtectionCommissionerService {
~ ProtectionCommissioner saveProtectionCommissioner(ProtectionCommissioner)
}

interface ru.emiren.infosystemdepartment.Service.SQL.OrientationService {
~ List<OrientationDTO> getAllOrientations()
~ Orientation saveOrientation(Orientation)
}

class ru.emiren.infosystemdepartment.Controller.SQL.SqlController {
- LecturerRepository lecturerRepository
~ StudentService studentService
~ DepartmentService departmentService
~ LecturerService lecturerService
~ OrientationService orientationService
~ ProtectionService protectionService
~ StudentLecturersService studentLecturersService
~ FQWService fqwService
~ WordService wordService
~ YearRepository yearRepository
~ List<LecturerDTO> lecturerDTOS
~ List<OrientationDTO> orientationDTOS
~ List<DepartmentDTO> departmentDTOS
~ List<FQWDTO> fqwdtos
~ List<Year> years
~ DateTimeFormatter dateTimeFormatter
- LocalDate date
+ String CreateLectureForm(Model)
+ String viewLecturer(Model)
+ String UploadDataForm(Model)
+ String CreateLectureForm(Model,String,HttpServletRequest)
+ String getLecturers(HttpServletRequest,Model,RedirectAttributes)
}


class ru.emiren.infosystemdepartment.Model.SQL.Reviewer {
- Long id
- String name
- String academicDegree
- String position
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.StudentLecturersServiceImpl {
~ StudentLecturerRepository studentLecturerRepository
+ StudentLecturers saveStudentLecturers(StudentLecturers)
+ List<StudentLecturersDTO> getAllStudentLecturers()
+ List<StudentLecturersDTO> findAllAndSortedByLecturerName()
+ List<StudentLecturersDTO> findAllAndSortedByLecturerAndThemeAndDateAndOrientationAndDepartment(String,Long,LocalDate,String,Long)
+ List<StudentLecturersDTO> findAllAndSortedByDate(String)
}


class ru.emiren.infosystemdepartment.DTO.SQL.ProtocolDTO {
- String fioStudent
- String fqwName
- String headOfTheFQW
- String review
- Integer volume
- Integer grade
}

interface ru.emiren.infosystemdepartment.Service.SQL.DepartmentService {
~ List<DepartmentDTO> getAllDepartments()
~ Department saveDepartment(Department)
}

interface ru.emiren.infosystemdepartment.Service.SQL.DataContainerService {
}
interface ru.emiren.infosystemdepartment.Repository.SQL.StudentRepository {
~ List<Student> findStudentsByLecturerId(Long)
~ List<Student> findAllStudentByLecturerIdAndOrientationCodeAndDepartmentCode(Long,String,String)
}

interface ru.emiren.infosystemdepartment.Repository.SQL.StudentLecturerRepository {
~ List<StudentLecturers> findAllSorted()
~ List<StudentLecturers> findAllAndSortedByLecturerAndThemeAndDateAndOrientationAndDepartment(String,Long,LocalDate,String,Long)
~ List<StudentLecturers> findAllSortedByDate(String)
}

class ru.emiren.infosystemdepartment.Model.SQL.Year {
- String year
- List<YearStudent> students
}

class ru.emiren.infosystemdepartment.Model.SQL.Protection {
- Long id
- Orientation orientation
- LocalDate dateOfProtection
- List<ProtectionCommissioner> commissioners
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.FQWServiceImpl {
~ FQWRepository fqwRepository
+ List<FQWDTO> getAllFQW()
+ FQW saveFqw(FQW)
}


class ru.emiren.infosystemdepartment.Mapper.ProtectionMapper {
+ {static} Protection mapToProtection(ProtectionDTO)
+ {static} ProtectionDTO protectionDTO(Protection)
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.DataContainerServiceImpl {
}
class ru.emiren.infosystemdepartment.Properties.PostgreSQLDataSourceProperties {
- Map<String,Object> properties
+ Map<String,Object> getProperties()
+ void setProperties(Map<String,Object>)
+ void addProperty(String,Object)
}


class ru.emiren.infosystemdepartment.Model.SQL.Department {
- Long code
- String name
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.ReviewerServiceImpl {
- ReviewerRepository reviewerRepository
+ Reviewer saveReviewer(Reviewer)
}


class ru.emiren.infosystemdepartment.Service.SQL.Impl.YearServiceImpl {
- YearRepository yearRepository
+ Year saveYear(Year)
}


class ru.emiren.infosystemdepartment.Config.JpaConfig {
+ EntityManagerFactoryBuilder entityManagerFactoryBuilder()
}

class ru.emiren.infosystemdepartment.DTO.SQL.StudentLecturersDTO {
- Long id
- Student student
- Lecturer lecturer
- Boolean isScientificSupervisor
- Boolean isConsultant
}

class ru.emiren.infosystemdepartment.Config.DataDatabaseConfig {
~ PostgreSQLDataSourceProperties postgreSQLDataSourceProperties
+ DataSource dataDataSource()
+ LocalContainerEntityManagerFactoryBean dataEntityManagerFactory(EntityManagerFactoryBuilder,DataSource)
+ PlatformTransactionManager dataTransactionManager(EntityManagerFactory)
}


class ru.emiren.infosystemdepartment.Controller.SQL.UploadDataController {
- StudentService studentService
- LecturerService lecturerService
- OrientationService orientationService
- CommissionerService commissionerService
- StudentLecturersService studentLecturersService
- ReviewerService reviewerService
- DepartmentService departmentService
- ProtectionService protectionService
- FQWService fqwService
- ProtocolService protocolService
- YearService yearService
- YearStudentService yearStudentService
- ProtectionCommissionerService protectionCommissionerService
+ String AddData(Map<String,String>)
- {static} Student createStudent(Map<String,String>)
- {static} Lecturer createLecturer(Map<String,String>)
- {static} StudentLecturers createStudentLecturers(Map<String,String>,Student,Lecturer)
- {static} Reviewer createReviewer(Map<String,String>)
- {static} Department createDepartment(Map<String,String>)
- {static} Orientation createOrientation(Map<String,String>)
- {static} FQW createFQW(Map<String,String>,Reviewer)
- {static} Protocol createProtocol(Map<String,String>)
- {static} Protection createProtection(Map<String,String>,Orientation,Date)
- {static} Year createYear(Map<String,String>,Date)
- {static} YearStudent createYearStudent(Year,Student)
- {static} Commissioner createCommissioner(Map<String,String>,String)
- {static} ProtectionCommissioner createProtectionCommissioner(Map<String,String>,Protection,Commissioner,String)
}


interface ru.emiren.infosystemdepartment.Service.Word.WordService {
+ NiceXWPFDocument generateWordDocument(List<List<String>>)
~ List<String> processTable(XWPFTable,int,int)
}

interface ru.emiren.infosystemdepartment.Service.SQL.StudentLecturersService {
~ StudentLecturers saveStudentLecturers(StudentLecturers)
~ List<StudentLecturersDTO> getAllStudentLecturers()
~ List<StudentLecturersDTO> findAllAndSortedByLecturerName()
~ List<StudentLecturersDTO> findAllAndSortedByLecturerAndThemeAndDateAndOrientationAndDepartment(String,Long,LocalDate,String,Long)
~ List<StudentLecturersDTO> findAllAndSortedByDate(String)
}

class ru.emiren.infosystemdepartment.Mapper.StudentLecturersMapper {
+ {static} StudentLecturers mapToStudentLecturers(StudentLecturersDTO)
+ {static} StudentLecturersDTO mapToStudentLecturersDTO(StudentLecturers)
}

class ru.emiren.infosystemdepartment.Mapper.OrientationMapper {
+ {static} Orientation mapToOrientation(OrientationDTO)
+ {static} OrientationDTO mapToOrientationDTO(Orientation)
}

class ru.emiren.infosystemdepartment.DTO.SQL.Year {
- String year
- List<YearStudentDTO> students
}

interface ru.emiren.infosystemdepartment.Repository.SQL.FQWRepository {
}
class ru.emiren.infosystemdepartment.Controller.Protocol.FunctionsController {
+ String protocol()
}

interface ru.emiren.infosystemdepartment.Service.SQL.CommissionerService {
~ Commissioner saveCommissioner(Commissioner)
}

class ru.emiren.infosystemdepartment.Controller.MainController {
+ String main()
+ String faq()
+ String giveup()
}

interface ru.emiren.infosystemdepartment.Service.SQL.StudentService {
~ Student saveStudent(Student)
~ List<StudentDTO> findAllStudent()
~ List<Student> findAllStudentById(Long)
~ List<StudentDTO> findAllStudentByLecturerIdAndOrientationCodeAndDepartmentCode(Long,String,String)
~ List<StudentDTO> findAllStudentByLecturerId(Long)
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.OrientationServiceImpl {
- OrientationRepository orientationRepository
+ List<OrientationDTO> getAllOrientations()
+ Orientation saveOrientation(Orientation)
}


interface ru.emiren.infosystemdepartment.Service.SQL.LecturerService {
~ LecturerDTO findByLecturerId(Long)
~ LecturerDTO findByLecturerName(String)
~ List<LecturerDTO> getAllLecturer()
~ LecturerDTO createDummyLecturer()
~ List<LecturerDTO> findAllLecturersById(Long)
~ Lecturer saveLecturer(Lecturer)
}

class ru.emiren.infosystemdepartment.Model.SQL.Lecturer {
- Long id
- String name
- String academicDegree
- String position
- Department department
- List<StudentLecturers> students
}

class ru.emiren.infosystemdepartment.Model.SQL.Student {
- Long id
- Long stud_num
- String name
- String citizenship
- String loe
- String classifier
- FQW fqw
- Orientation orientation
- Department department
- List<StudentLecturers> lecturers
- List<YearStudent> yearStudents
}

interface ru.emiren.infosystemdepartment.Repository.SQL.OrientationRepository {
}
class ru.emiren.infosystemdepartment.Service.SQL.Impl.YearStudentServiceImpl {
- YearStudentRepository yearStudentRepository
- YearRepository yearRepository
- StudentRepository studentRepository
+ List<YearStudentDTO> getAllYearStudent()
+ YearStudent saveYearStudent(YearStudent)
}


class ru.emiren.infosystemdepartment.Model.SQL.StudentLecturers {
- Long id
- Student student
- Lecturer lecturer
- Boolean isScientificSupervisor
- Boolean isConsultant
}

interface ru.emiren.infosystemdepartment.Service.SQL.YearService {
~ Year saveYear(Year)
}

interface ru.emiren.infosystemdepartment.Repository.SQL.LecturerRepository {
~ LecturerDTO findLecturerById(Long)
~ Lecturer findLecturerByName(String)
}

interface ru.emiren.infosystemdepartment.Repository.SQL.ProtectionCommissionerRepository {
}
class ru.emiren.infosystemdepartment.Mapper.ReviewerMapper {
+ {static} Reviewer mapToReviewer(ReviewerDTO)
+ {static} ReviewerDTO mapToReviewerDTO(Reviewer)
}

interface ru.emiren.infosystemdepartment.Repository.SQL.ProtocolRepository {
}
class ru.emiren.infosystemdepartment.Mapper.Support.DataMapper {
+ {static} DataDTO dataToDataDTO(Data)
+ {static} Data dataDTOToData(DataDTO)
}

class ru.emiren.infosystemdepartment.Service.SQL.Impl.ProtocolServiceImpl {
- ProtocolRepository protocolRepository
+ Protocol saveProtocol(Protocol)
}


interface ru.emiren.infosystemdepartment.Repository.SQL.ProtectionRepository {
+ Protection findDateByOrientationCode(String)
}

class ru.emiren.infosystemdepartment.Model.SQL.Orientation {
- String code
- String name
- List<Protection> protection
}

class ru.emiren.infosystemdepartment.Service.Word.Impl.WordServiceImpl {
- Resource resource
- InputStream inputStream
- ResourceLoader resourceLoader
+ NiceXWPFDocument generateWordDocument(List<List<String>>)
+ List<String> processTable(XWPFTable,int,int)
- NiceXWPFDocument createWordDocumentByTemplatesPath(List<List<String>>)
- {static} Map<String,Object> getStringObjectMap(List<String>)
}


class ru.emiren.infosystemdepartment.Mapper.FQWMapper {
+ {static} FQW mapToFQW(FQWDTO)
+ {static} FQWDTO mapToFQWDTO(FQW)
}

class ru.emiren.infosystemdepartment.Mapper.StudentMapper {
+ {static} Student mapToStudent(StudentDTO)
+ {static} StudentDTO mapToStudentDTO(Student)
}

interface ru.emiren.infosystemdepartment.Repository.SQL.YearRepository {
}
class ru.emiren.infosystemdepartment.Model.SQL.FQW {
- String name
- String classifier
- Float uniqueness
- String feedback
- String volume
- Reviewer reviewer
}

class ru.emiren.infosystemdepartment.Config.SecurityConfig {
+ SecurityFilterChain securityFilterChain(HttpSecurity)
}

class ru.emiren.infosystemdepartment.Config.SqlDatabaseConfig {
~ PostgreSQLDataSourceProperties postgreSQLDataSourceProperties
+ DataSource sqlDataSource()
+ LocalContainerEntityManagerFactoryBean sqlEntityManagerFactory(EntityManagerFactoryBuilder,DataSource)
+ PlatformTransactionManager dataTransactionManager(EntityManagerFactory)
}


class ru.emiren.infosystemdepartment.DTO.SQL.ProtectionCommissionerDTO {
- Long id
- ProtectionDTO protection
- CommisionerDTO commissioner
- String question
}



org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.CommisionerRepository
ru.emiren.infosystemdepartment.Service.SQL.LecturerService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.LecturerServiceImpl
ru.emiren.infosystemdepartment.Service.Support.DataService <|.. ru.emiren.infosystemdepartment.Service.Support.Impl.DataServiceImpl
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.DepartmentRepository
ru.emiren.infosystemdepartment.Service.SQL.ProtectionService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.ProtectionServiceImpl
ru.emiren.infosystemdepartment.Service.SQL.StudentService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.StudentServiceImpl
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.ReviewerRepository
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.YearStudentRepository
ru.emiren.infosystemdepartment.Service.SQL.ProtectionCommissionerService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.ProtectionCommissionerServiceImpl
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.Support.DataRepository
ru.emiren.infosystemdepartment.Service.SQL.DepartmentService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.DepartmentServiceImpl
ru.emiren.infosystemdepartment.Service.SQL.CommissionerService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.CommissionerServiceImpl
ru.emiren.infosystemdepartment.Service.SQL.StudentLecturersService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.StudentLecturersServiceImpl
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.StudentRepository
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.StudentLecturerRepository
ru.emiren.infosystemdepartment.Service.SQL.FQWService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.FQWServiceImpl
ru.emiren.infosystemdepartment.Service.SQL.DataContainerService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.DataContainerServiceImpl
ru.emiren.infosystemdepartment.Service.SQL.ReviewerService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.ReviewerServiceImpl
ru.emiren.infosystemdepartment.Service.SQL.YearService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.YearServiceImpl
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.FQWRepository
ru.emiren.infosystemdepartment.Service.SQL.OrientationService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.OrientationServiceImpl
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.OrientationRepository
ru.emiren.infosystemdepartment.Service.SQL.YearStudentService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.YearStudentServiceImpl
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.LecturerRepository
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.ProtectionCommissionerRepository
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.ProtocolRepository
ru.emiren.infosystemdepartment.Service.SQL.ProtocolService <|.. ru.emiren.infosystemdepartment.Service.SQL.Impl.ProtocolServiceImpl
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.ProtectionRepository
ru.emiren.infosystemdepartment.Service.Word.WordService <|.. ru.emiren.infosystemdepartment.Service.Word.Impl.WordServiceImpl
org.springframework.data.jpa.repository.JpaRepository <|-- ru.emiren.infosystemdepartment.Repository.SQL.YearRepository
@enduml